set runtimepath^=~/.vim runtimepath+=~/.vim/after
let &packpath = &runtimepath

"
"=== basic =====================================================================
  let s:OSName = system("uname -s")
  set nocompatible
  syntax on
  " language en_US
  filetype plugin on
  filetype plugin indent on
  filetype indent on
  set encoding=utf-8
  set t_CO=256			                  " use 256 bit colors
  set cursorline


  if s:OSName == "Darwin\n"
    set shell=/usr/local/bin/zsh      " MacOS zsh path
  elseif s:OSName == "Linux\n"
    set shell=/usr/bin/zsh            " ArchLinux zsh path
  endif

  set foldmethod=syntax
  set foldlevel=777
  set autoindent                      " :h ai
  set smartindent                     " :h si
  set inccommand=split
  set cmdheight=2                     " Better display for messages
  set updatetime=300                  " Smaller updatetime for CursorHold & CursorHoldI
  set shortmess+=c                    " don't give |ins-completion-menu| messages.
  " set visualbell t_vb=              " turn off error beep/flash
  " set novisualbell                  " turn off visual bell
  set noerrorbells visualbell t_vb=
  autocmd GUIEnter * set visualbell t_vb=

  " Use a blinking upright bar cursor in Insert mode, a blinking block in normal
  " if &term == 'xterm-256color' || &term == 'screen-256color'
  "   let &t_SI = '\<Esc>[5 q'
  "   let &t_EI = '\<Esc>[1 q'
  " endif
  "
  " if exists('$TMUX')
  "   let &t_EI = '\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\'
  "   let &t_SI = '\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\'
  " endif
"===================================================================== basic ===

"=== plugins ===================================================================
"
  call plug#begin('~/.vim/plugged')
    " Plug 'jeffkreeftmeijer/vim-numbertoggle'                      " Toggles between hybrid and absolute line numbers automatically - https://github.com/jeffkreeftmeijer/vim-numbertoggle
    " Plug 'ctrlpvim/ctrlp.vim'                                       " File searcher - https://github.com/ctrlpvim/ctrlp.vim
    " Plug 'scrooloose/nerdtree'                                      " File explorer sidebar - https://github.com/scrooloose/nerdtree

    Plug 'scrooloose/nerdtree', { 'on': ['NERDTreeToggle', 'NERDTreeFind'] }
    Plug 'ryanoasis/vim-devicons'                                   " Glyphs / icons - https://github.com/ryanoasis/vim-devicons
    Plug 'tiagofumo/vim-nerdtree-syntax-highlight'                  " Highlight for nerdtree - https://github.com/tiagofumo/vim-nerdtree-syntax-highlight

    Plug 'scrooloose/nerdcommenter'                                 " Intensely orgasmic commenting - https://github.com/scrooloose/nerdcommenter
    Plug 'jlanzarotta/bufexplorer'                                  " Buffer explorer - https://github.com/jlanzarotta/bufexplorer
    " Plug 'mcchrish/nnn.vim'
    " Plug 'prettier/vim-prettier', { 'do': 'yarn install' }          " Code formatter - https://github.com/prettier/vim-prettier
    Plug 'terryma/vim-expand-region'                                " Select increasingly regions - https://github.com/terryma/vim-expand-region
    Plug 'tpope/vim-fugitive'                                       " Git wrapper - https://github.com/tpope/vim-fugitive
    Plug 'junegunn/gv.vim'                                          " Git commit browser - https://github.com/junegunn/gv.vim
    Plug 'mattn/emmet-vim'                                          " Expanding abbreviations - https://github.com/mattn/emmet-vim
    Plug 'dhruvasagar/vim-table-mode'                               " Draw tables - https://github.com/dhruvasagar/vim-table-mode
    Plug 'chrisbra/Colorizer'                                       " Highlighting colors - https://github.com/chrisbra/Colorizer
    Plug 'christoomey/vim-tmux-navigator'                           " Navigation between tmux and vim - https://github.com/christoomey/vim-tmux-navigator
    Plug 'whiteinge/diffconflicts'                                  " Mergetool - https://github.com/whiteinge/diffconflicts

    " Plug 'Quramy/vim-js-pretty-template'                            " JSX/TSX template syntax highlighting - https://github.com/Quramy/vim-js-pretty-template
    Plug 'tpope/vim-surround'                                       " Quoting/parenthesizing - https://github.com/tpope/vim-surround
    " Plug 'tpope/vim-unimpaired'                                     " Brackets - https://github.com/tpope/vim-unimpaired
    " Plug 'Quramy/tsuquyomi'                                         " Typescript IntelliSense - https://github.com/Quramy/tsuquyomi
    "
    " Plug 'Shougo/denite.nvim'                                       " Generic fuzzy finder - https://github.com/Shougo/denite.nvim
    " Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins'}    " Completion framework - https://github.com/Shougo/deoplete.nvim
    " Plug 'w0rp/ale'                                                 " Asynchronous linting - https://github.com/w0rp/ale

    " Plug 'neoclide/coc.nvim', {'branch': 'release'}                 " IntelliSense engine - https://github.com/neoclide/coc.nvim
    Plug 'neoclide/coc.nvim', { 'do': 'yarn install --frozen-lockfile' }

    Plug 'leafgarland/typescript-vim'                               " TypeScript syntax  - https://github.com/leafgarland/typescript-vim

    Plug 'SirVer/ultisnips'                                         " Snippets engine - https://github.com/SirVer/ultisnips
    Plug 'honza/vim-snippets'                                       " Snippets for various programming languages - https://github.com/honza/vim-snippets
    " Plug 'autozimu/LanguageClient-neovim', { 'branch': 'next', 'do': 'bash install.sh' } " language server protocol (used for e.g. go to definition) - https://github.com/autozimu/LanguageClient-neovim
    Plug 'mileszs/ack.vim'                                          " Search tool - https://github.com/mileszs/ack.vim
    Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' } " Fuzzy finder - https://github.com/junegunn/fzf
    Plug 'junegunn/fzf.vim'
    Plug 'easymotion/vim-easymotion'                                " Fast navigation - https://github.com/easymotion/vim-easymotion
    Plug 'junegunn/vim-easy-align'                                  " Text alignment plugin - https://github.com/junegunn/vim-easy-align
    Plug 'ludovicchabant/vim-gutentags'                             " Manages tag files - https://github.com/ludovicchabant/vim-gutentags
    Plug 'majutsushi/tagbar'                                        " Symbols / definitions for current file - https://github.com/majutsushi/tagbar
    " Plug 'pseewald/nerdtree-tagbar-combined'                      " Tagbar and NERDTree - https://github.com/pseewald/nerdtree-tagbar-combined
    Plug 'kristijanhusak/vim-hybrid-material'                       " Material theme - https://github.com/kristijanhusak/vim-hybrid-material
    Plug 'itchyny/lightline.vim'                                    " Status line - https://github.com/itchyny/lightline.vim
    Plug 'tjdevries/overlength.vim'                                 " Ruler - https://github.com/tjdevries/overlength.vim
    " Plug 'blueyed/vim-diminactive'                                  " Dim inactive windows - https://github.com/blueyed/vim-diminactive
    Plug 'gcmt/taboo.vim'                                           " Pretty tabs - https://github.com/gcmt/taboo.vim
    Plug 'kshenoy/vim-signature'                                    " Marks tools - https://github.com/kshenoy/vim-signature
    Plug 'pseewald/vim-anyfold'                                     " Foldings - https://github.com/pseewald/vim-anyfold
    Plug 'brooth/far.vim'                                           " Find And Replace Vim plugin - https://github.com/brooth/far.vim
    Plug 'tyru/open-browser.vim'                                    " Open URI with browser - https://github.com/tyru/open-browser.vim/
    " Plug 'dhruvasagar/vim-zoom'
    " Plug 'junegunn/vim-peekaboo'                                    " Sidebar registers - https://github.com/junegunn/vim-peekaboo
    "
    " TODO: try this plugins:
    Plug 'svermeulen/vim-yoink'                                     " Yank history to cycle between when pasting - https://github.com/svermeulen/vim-yoink
    Plug 'svermeulen/vim-cutlass'                                   " Adds a 'cut' operation separate from 'delete' - https://github.com/svermeulen/vim-cutlass
    " Plug 'svermeulen/vim-subversive'                                " Operator motions to quickly replace text - https://github.com/svermeulen/vim-subversive
    "

    " TODO: check this out
    " Plug 'benmills/vimux'                                           " vim plugin to interact with tmux - https://github.com/benmills/vimux
  call plug#end()
"=================================================================== plugins ===

"=== settings ==================================================================
  if (has("termguicolors")) | set termguicolors | endif

  set background=dark

  colorscheme hybrid_reverse

  " let g:lightline.colorscheme = 'palenight'     " configure lightline

  hi Normal guibg=#121212


  " let mapleader = ','                 " set default leader to comma
  set backspace=indent,eol,start      " make backspace behave like every other editor
  " set nonumber
  set number relativenumber           " see vim-numbertoggle
  set hlsearch                        " enable search highlighting
  set incsearch                       " enable highlighting the first search match
  set nowrap                          " disable line break
  set formatoptions-=t
  set tabstop=2                       " width of tab character
  set softtabstop=2                   " fine tunes the amount of white space to be added
  set shiftwidth=2                    " determines the amount of whitespace to add in normal mode
  set expandtab                       " When on uses space instead of tabs
  set fileformat=unix
  set guioptions-=L
  set guioptions-=r
  set guioptions-=R
  set foldcolumn=2
  set scrolloff=7                     " Number of screen lines to keep above and below the cursor
  set signcolumn=yes                  " Allways show Sign Column
  set guifont=Hack_Nerd_Font:h13      " Use custom font with powerline support
  set wildmenu                        " Menu when using tab completion
  set wildignore+=*/.git/*,*/.hg/*,*/.svn/*        " Exluding version control directories
  set listchars=space:·,tab:>\ ,trail:·,extends:↴,precedes:↳,eol:↲,nbsp:+
  set showbreak=↳
  set linebreak                       " :h lbr
  set hidden                          " Required for operations modifying multiple buffers like rename
  set timeoutlen=1000 ttimeoutlen=0   " Eliminating delays on ESC
  set ignorecase                      " Ignore case for search, substitue etc.
  set smartcase                       " see :h smartcase
  set lazyredraw                      " Improving scrolling performance
  set regexpengine=1
  set autoread                        " Reload files on changes from outside of vim
  " set linespace=4
  set history=777                     " Cache commands
  set showcmd                         " Show incomplete commands in the buttom bar
  set ruler                           " Show the cursor position
  " set backup                        " :h bk
  " set bex?                          " :h bex

  let $VTE_VERSION="100"

  let g:netrw_banner = 0              " remove the banner
  let g:netrw_browse_split = 2        " open files in a new vertical split

  " Left gap
  hi FoldColumn term=standout ctermfg=4 ctermbg=bg guifg=#6C6C6C guibg=bg
  hi Folded guibg=bg guifg=#6C6C6C ctermbg=bg

  " Highlighting search matches
  hi Search guibg=#D7FFAF guifg=#212022

  " Highlighting braces
  hi MatchParen guibg=#D7FFAF guifg=#212022

  " set guicursor=n-v-c:block-Cursor/lCursor,i-ci:ver25-Cursor/lCursor,r-cr:hor20-Cursor/lCursor
  "
  " set guicursor=n-v-c-sm:block,i-ci-ve:ver25,r-cr-o:hor20,
  " set guicursor=n:blinkon1
  "
  " set guicursor=
  " hi Cursor guifg=green guibg=green
  " hi Cursor2 guifg=red guibg=red
  " set guicursor=n-v-c:block-Cursor/lCursor,i-ci-ve:ver25-Cursor2/lCursor2,r-cr:hor20,o:hor50
  if exists('+termguicolors')
    let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
    let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
    set termguicolors
  endif
"================================================================= settings ===

"
"=== plugins configs ===========================================================
  source ~/.config/nvim/xpluggins/foldtext.vimrc
  " source ~/.config/nvim/xpluggins/ctrlp.vimrc
  source ~/.config/nvim/xpluggins/bufexplorer.vimrc
  source ~/.config/nvim/xpluggins/nerdtree.vimrc
  source ~/.config/nvim/xpluggins/nerdcommenter.vimrc
  source ~/.config/nvim/xpluggins/fzf.vimrc
  " source ~/.config/nvim/xpluggins/nnn.vimrc
  source ~/.config/nvim/xpluggins/ack.vimrc
  source ~/.config/nvim/xpluggins/far.vimrc
  source ~/.config/nvim/xpluggins/taboo.vimrc
  source ~/.config/nvim/xpluggins/table-mode.vimrc
  source ~/.config/nvim/xpluggins/devicons.vimrc
  source ~/.config/nvim/xpluggins/tagbar.vimrc
  source ~/.config/nvim/xpluggins/ultisnips.vimrc
  source ~/.config/nvim/xpluggins/overlength.vimrc
  " source ~/.config/nvim/xpluggins/peekaboo.vimrc
  " source ~/.config/nvim/xpluggins/diminactive.vimrc
  source ~/.config/nvim/xpluggins/marks.vimrc
  source ~/.config/nvim/xpluggins/yoink.vimrc
  source ~/.config/nvim/xpluggins/cutclass.vimrc
  " source ~/.config/nvim/xpluggins/deoplete.vimrc
  " source ~/.config/nvim/xpluggins/ale.vimrc
  " source ~/.config/nvim/xpluggins/language-client.vimrc
  source ~/.config/nvim/xpluggins/coc.vimrc
"=================================================================== plugins ===

source ~/.config/nvim/mappings.vimrc
source ~/.config/nvim/autocmd.vimrc

